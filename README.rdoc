= ZfUserManager

== Setup
* Aggiungere come dipendenza al gemfile: gem 'zf_user_manager', path: "../zf_user_manager"
* Eseguire bundle install(Attenzione devi essere aggiunto agli utenti del repository per scaricarlo)
* Settare le root route in routes.rb:  root to: "home#index"
* Installare e settare le migrations: rake zf_user_manager:install:migrations && rake db:migrate
* Aggiungere le rotte dell'engine   mount ZfUserManager::Engine => '/'
* Nell'applicazione host è necessario includere anche le seguenti gemme:
  gem 'zf_client', :git => 'https://github.com/intersailengineering/zf-client.git', :branch => 'staging'
  gem 'intersail_auth', :git => 'git@github.com:intersailengineering/intersail_auth.git', :branch => 'staging'
  Per la loro installazione vedere la relativa documentazione associata

== Sovvrascrivere Classi e controller
Creare una cartella app/decorators ogni file che matcha *_decorator*.rb sarà caricato, in questo modo è possibile
sovvrascrivere metodi di classi e controller, per esempio:

    module IntersailAuth
      ApplicationController.class_eval do
        helper_method :menu_name, :submenu_name

        def menu_name
          "layouts/menu/empty"
        end

        def submenu_name
          "layouts/nav/under_top/empty"
        end
      end
    end

== File di configurazione ed initializers

Per sovvrascrivere la configurazione creare un file intersail_auth.rb nella cartella config/initializers
Il file deve essere così strutturato:

Intersail::Configuration.configure do |config|
    config.key = "key"
end

Dove le possibili chiavi sono nella classa Intersail::Configuration definiti come attr_accessor