= ZfUserManager

Offre un'interfaccia grafica per la gestione utenti di ZapFlow

== Setup

* Aggiungere come dipendenza al gemfile: gem 'zf_user_manager', :git => 'git@github.com:intersailengineering/zf_user_manager.git', :branch => 'staging'
* Eseguire bundle install(Attenzione devi essere aggiunto agli utenti del repository per scaricarlo)
* Settare le root route in routes.rb:  root to: "home#index"
* Installare e settare le migrations: rake intersail_auth:install:migrations && rake db:migrate
* Aggiungere le rotte dell'engine   mount ZfUserManager::Engine => '/'
* Nell'applicazione host è necessario includere anche le seguenti gemme:
  gem 'zf_client', :git => 'https://github.com/intersailengineering/zf-client.git', :branch => 'staging'
  gem 'intersail_auth', :git => 'git@github.com:intersailengineering/intersail_auth.git', :branch => 'staging'
  Per la loro installazione vedere la relativa documentazione associata
* Creare infineun layout di nome application_zum che contiene 'yield', in esso sarà renderizzato il form di login: il layout deve contenere i seguenti tag js e css:
    <%= stylesheet_link_tag    "zf_user_manager/application", media: "all" %>
    <%= javascript_include_tag "zf_user_manager/application" %>
  in questo modo saranno caricati correttamente i css dell'engine.
  Si può anche usare un layout customizzato in tal caso bisogna sovrascrivere il layout da utilizzare nel controller

== Ambiente di test

Per eseguire i test manuali nell'ambiente di test è necessario usare l'applicazione dummy presente
all'interno della cartella test/dummy.
Per avviare il server di rails quindi andare nella folder test/dummy ed eseguire rails s.
login: username: admin, password: 123 (verificare in caso non vada la password di admin sul server di login associato ad intersail_auth)

== Sovvrascrivere Classi e controller

Creare una cartella app/decorators ogni file che matcha *_decorator*.rb sarà caricato, in questo modo è possibile
sovvrascrivere metodi di classi e controller, per esempio:

    module Intersail
      module ZfUserManager
          ApplicationController.class_eval do
            helper_method :menu_name, :submenu_name

            def menu_name
              "layouts/menu/empty"
            end

            def submenu_name
              "layouts/nav/under_top/empty"
            end
          end
      end
    end

== File di configurazione ed initializers

Questo engine non utilizza initializer.